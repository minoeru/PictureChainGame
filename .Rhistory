shiny::runApp()
data.numbers
library(RMeCab)
shiny::runApp()
devtools::install_github("IshidaMotohiro/RMeCab")
devtools::install_github("IshidaMotohiro/RMeCab")
runApp()
res <- RMeCabC(“すもももももももものうち”)
res <- RMeCabC("すもももももももものうち")
res
devtools::install_github("IshidaMotohiro/RMeCab")
sessionInfo()
install.packages("RMeCab", repos = "https://rmecab.jp/R", type = "source")
sessionInfo()
setRepositories()
setRepositories()
setRepositories()
runApp()
setRepositories()
setRepositories()
installed.packages()
setRepositories(devtools)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("IshidaMotohiro/RMeCab")
devtools::install_github("IshidaMotohiro/RMeCab",force = TRUE)
shiny::runApp()
setRepositories()
setRepositories()
setRepositories()
data <- read.csv("data.csv")
data
data <- read.csv2("data.csv")
data
ppp <- read.table("data.csv")
ppp
runApp()
mecab -v
RMeCab
library(RMeCab)
RMeCab
install.packages("quanteda")
con <- dbConnect(SQLite(), "hoge.db", synchronous="off")
test_data <- dbReadTable(con, 'word_set')
test_data[1]
View(test_data)
test_data <- test_data$word
test_data
ttt <- "びーだる"
match(ttt,test_data)
ttt <- "びーdeる"
ttt <- "びーでる"
match(ttt,test_data)
shiny::runApp()
runApp()
runApp()
match("りりり",test_data)
!is.na(match("りりり",test_data))
is.na(match("りりり",test_data))
runApp()
View(con)
con
aa <- dbReadTable(con)
as.data.frame(dbListTables(con))
aa <- dbReadTable(con,'sqlite_sequence')
View(aa)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- read.csv("data.csv")
aaa <- data$Name %>% as.vector()
runApp()
my_data_names <- lapply(1:1000,function(x){return(c(""))})
View(my_data_names)
my_data_names[1] <<- data$Name %>% as.vector()
View(data)
my_data_names
my_data_names[1]
my_data_names[[1]]
my_data_names[[1]] <<- data$Name %>% as.vector()
my_data_names <- lapply(1:1000,function(x){return(c(""))})
my_data_names[[1]]
my_data_names[[1]] <<- data$Name %>% as.vector()
data$Name %>% as.vector()
my_data_names[[1]] <<- data$Name %>% as.vector()
my_data_names
data$Name %>% as.vector()
c("aaa","bbb")
my_garbage <- lapply(1:1000,function(x){return(c(""))})
my_garbage[1] <<- c("")
my_garbage[[1]] <<- c("")
my_garbage %>% class()
my_garbage[1] <- c("")
my_data_names[2] <- data$Name %>% as.vector()
my
my_data_names[1]
my_data_names[[1]]
my_data_names[[2]] <- data$Name %>% as.vector()
my_data_names[[2]]
runApp()
runApp()
runApp()
runApp()
runApp()
View(con)
con <- dbConnect(SQLite(), "hoge.db", synchronous="off")
test_data <- dbReadTable(con, 'word_set')
test_data <- test_data$word
test_data <- dbReadTable(con, 'word_set')
View(test_data)
runApp()
runApp()
runApp()
View(my_garbage)
View(test_data)
library(RMeCab)
RMeCabC("生姜焼き")
shiny::runApp()
View(data)
test_data <- read.csv("test.csv")
View(test_data)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
my_bot_ans <- numeric(1000)
my_bot_ans[1:1000] <- "しりとり"
runApp()
runApp()
runApp()
runApp()
my_data_names <- lapply(1:1000,function(x){return(c(""))})
data <- read.csv("data.csv")
data_names <- data$Name %>% as.vector()
my_data_names <- lapply(1:1000,function(x){return(test_data)})
my_data_names <- lapply(1:1000,function(x){return(data_names)})
View(my_data_names)
id <- floor(runif(1) * 1000)
id
data_names <- data$Name %>% as.vector()
my_data_names[id] <-  data_names
my_data_names[[id]] <-  data_names
my_data_names[[id]] <<-  data_names
my_data_names[[id]] <-  data_names
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
